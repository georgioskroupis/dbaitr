name: Deploy to Firebase Hosting

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: ["main"]

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    env:
      NEXT_TELEMETRY_DISABLED: 1
      CI: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify repo and framework files
        run: |
          pwd
          ls -la
          test -f package.json && node -e "const p=require('./package.json');console.log('next dep:', p.dependencies?.next || p.devDependencies?.next || '(none)')" || (echo 'missing package.json' && exit 1)

      - name: Frameworks info (pre-flight)
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
          GOOGLE_APPLICATION_CREDENTIALS: ${{ runner.temp }}/sa.json
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          printf '%s' "${{ secrets.FIREBASE_SERVICE_ACCOUNT }}" > "$GOOGLE_APPLICATION_CREDENTIALS"
          npx --yes firebase-tools@14.14.0 frameworks:info --project "$FIREBASE_PROJECT_ID" --debug

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        env:
          FIREBASE_CLI_EXPERIMENTS: webframeworks
          NEXT_PUBLIC_FIREBASE_API_KEY: ${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY || '' }}
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN: ${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN || '' }}
          NEXT_PUBLIC_FIREBASE_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID || '' }}
          NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET: ${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET || '' }}
          NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID || '' }}
          NEXT_PUBLIC_FIREBASE_APP_ID: ${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID || '' }}
          NEXT_PUBLIC_IDV_ONDEVICE: ${{ secrets.NEXT_PUBLIC_IDV_ONDEVICE || 'true' }}
          NEXT_PUBLIC_IDV_AI_APPROVAL: ${{ secrets.NEXT_PUBLIC_IDV_AI_APPROVAL || 'true' }}
          NEXT_PUBLIC_IDV_STRICT_MINIMAL: ${{ secrets.NEXT_PUBLIC_IDV_STRICT_MINIMAL || 'true' }}
          NEXT_PUBLIC_HUMAN_MODELS_URL: ${{ secrets.NEXT_PUBLIC_HUMAN_MODELS_URL || '/vendor/human/models/' }}
          NEXT_PUBLIC_TESSERACT_BASE_URL: ${{ secrets.NEXT_PUBLIC_TESSERACT_BASE_URL || '/vendor/tesseract/' }}
          NEXT_ENABLE_IDV_CSP: ${{ secrets.NEXT_ENABLE_IDV_CSP || 'false' }}
          CLOUD_RUN_IDV_URL: ${{ secrets.CLOUD_RUN_IDV_URL || '' }}
        with:
          entryPoint: .
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          channelId: live
          projectId: ${{ secrets.FIREBASE_PROJECT_ID }}
